注：
1）以下文件的顺序遵循从子类到父类的顺序，即序号最小的是neural_sort直接使用的模型文件，然后逐层依赖序号更大的模型文件，直到最高层的父类base_model，核心原则就是函数逻辑以子类实现的为主，如果父类中有同名函数实际是不生效的。
2）可以从子类一直往父类追，看neural_sort依赖的逻辑都涉及哪些，因为涉及neural_sort的所有逻辑不是都放在第一个子类文件中，然后把neural_sort涉及的逻辑提取出来改造成适配你们框架的代码。
3）建议还是仔细完整读一下代码，代码都要初步看一遍，理解每行代码的含义是什么，一些跟场景逻辑相关的代码要无视，有问题可以随时联系，毕竟里面不可避免地会有涉及到框架和场景相关的代码

1.subscribe_rerank_actor_critic_v2_optimize_reward.py
--neural_sort模型直接使用的模型文件

2.subscribe_rerank_actor_critic_v1_optimize_reward.py
--neural_sort模型依赖的父类文件，一些neural_sort的逻辑放在这个文件里面

3.subscribe_rerank_actor_critic_v1_second_topping.py
--涉及场景相关的一些逻辑

4.subscribe_rerank_actor_critic_v1.py
--涉及场景相关的一些逻辑

5.all_items_rerank_actor_critic_v1.py
--EG架构模型的主体代码

6.base_model_reranking_new.py
--基础重排模型的代码

7.base_model.py
--模型最高层的父类

8.original_neural_sort.py
--neural_sort函数的代码

9.algo_conf.json
--neural_sort模型的配置文件，模型代码里面的一些if判断，所依赖的配置值在这个文件里面